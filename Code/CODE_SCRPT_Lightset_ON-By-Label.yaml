# ELEMENT OF: LIGHT-SET VIRTUAL OBJECT
# This script takes a label and turns on all lights that have that label
# applied to them. Based on the 'state_helper_map' variable it may also
# set, or transition, the state of the Light Set in question.
# This script is also a component of my 'Day-Dim' mini-application.

# ==== Change Log ==============================================================
# 2025-04-23: Update lightset_map to the naming conventions

lightset_on_by_label:
  alias: Light Set | On By Label
  description: >
    **Member Of**: *Light-Set / Day-Dim App.* ||
    Pass in a Light Set label. All lights assigned to that label will be
    turned on.

  # ==== Params in from calling automation or script ===========================
  fields:
    lightset_label:
      description: Label passed in by caller
      example: Light Set - Day Dim - Kitchen
      required: true

  # ==== Internal variables used in this script ================================
  variables:
    label_to_act_on: "{{ lightset_label }}"

    # This is copy/paste in from CODE_SNIP_Lightset-Map.yaml
    lightset_map:
      "Light-Set - Day-Dim | Test Set":
        state_helper: "input_select.lightset_test_set_state"
        start_state: "NoSetState"
        completed_state: "Idle"

      "Light-Set - Day-Dim | Living Area":
        state_helper: "input_select.lightset_living_area_state"
        start_state: "NoSetState"
        completed_state: "Idle"

      "Light-Set - Day-Dim | Kitchen":
        state_helper: "input_select.lightset_kitchen_state"
        start_state: "NoSetState"
        completed_state: "Idle"

    lset_state_helper: "{{ lightset_map[lightset_label].state_helper | default('NoStateHelper') }}"
    entry_state: "{{ lightset_map[lightset_label].start_state | default('NoSetState') }}"
    exit_state: "{{ lightset_map[lightset_label].completed_state | default('NoSetState') }}"

  # ==== Take action ===========================================================
  sequence:
    # If this light set is one that wants us to set a specific state to be
    # in during the act of turning the light on, set it now.
    - choose:
        - conditions: "{{ entry_state != 'NoSetState' }}"
          sequence:
            - action: input_select.select_option
              metadata: {}
              data:
                option: "{{ entry_state }}"
              target:
                entity_id: "{{ lset_state_helper }}"
            - delay:
                hours: 0
                minutes: 0
                seconds: 2
                milliseconds: 0

    # Turn on the lights in the set
    - repeat:
        for_each: "{{ label_entities(label_to_act_on) }}"
        sequence:
          - data:
              entity_id: "{{ repeat.item }}"
            action: homeassistant.turn_on
          - delay:
              hours: 0
              minutes: 0
              seconds: 2
              milliseconds: 0

    # If this light set is one that wants us to set a specific state upon
    # completion of our actions, set it now, just before exit.
    - choose:
        - conditions: "{{ exit_state != 'NoSetState' }}"
          sequence:
            - action: input_select.select_option
              metadata: {}
              data:
                option: "{{ exit_state }}"
              target:
                entity_id: "{{ lset_state_helper }}"
